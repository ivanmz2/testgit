# any name you want for the action
name: automation

# which events trigger this action
# here we're saying pull requests to the `main` branch only
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

# you can have one or more jobs
jobs:
    # job name
  format:
    # an instance to run the job on
    runs-on: ubuntu-latest
    # steps start here
    steps:
    # this step uses an action from the community to checkout the repo
    # it will download the repo on the instance running the job
      - name: GitHub checkout
        uses: actions/checkout@v2

    # this step runs a command to install `black`
      - name: Install black
        run: pip install black==22.*
        
    # finally, this step checks to see if all the files
    # are properly formatted
      - name: Run black
        run: black . --check

  aws:
    # an instance to run the job on
    runs-on: ubuntu-latest
    env:
      BUCKET_NAME: lambdafuncivan1230985637 
      FOLDER_NAME: py-func 
      GOOS: linux 
      CGO_ENABLED: 0 
      GOARCH: amd64
    # steps start here
    steps:
    # this step uses an action from the community to checkout the repo
    # it will download the repo on the instance running the job
      - name: GitHub checkout
        uses: actions/checkout@v2
    #Using aws credentials    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::234121525995:user/githubtest
          aws-access-key-id: ${{ secrets.AWS_ACCES_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: DryRun S3
        run: |
          echo "updating function $FUNC_NAME"
          zip artifact.zip *.py
          aws s3 cp artifact.zip s3://{{ env.BUCKET_NAME }}/$KEY_PREFIX/artifact.zip
          aws lambda update-function-code --function-name $FUNC_NAME --s3-bucket {{ env.BUCKET_NAME }} --s3-key $KEY_PREFIX/artifact.zip
